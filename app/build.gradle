plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

apply from: '../dependencies.gradle'

android {
    compileSdk versions.compileSdk

    defaultConfig {
        applicationId "com.gilar.awesomeapp"
        minSdk versions.minSdk
        targetSdk versions.compileSdk
        versionCode generateVersionCode()
        versionName generateVersionName()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

dependencies {
    implementation "androidx.core:core-ktx:$versions.androidXCore"
    implementation "androidx.appcompat:appcompat:$versions.appCompat"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintLayout"
    implementation "com.google.android.material:material:$versions.material"
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"

    // Koin - DI
    implementation "io.insert-koin:koin-android:$versions.koin"

    // Network
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"

    // Glide - Image Loader
    implementation "com.github.bumptech.glide:glide:$versions.glide"
    kapt "com.github.bumptech.glide:compiler:$versions.glide"

    // Timber - Logging
    implementation "com.jakewharton.timber:timber:$versions.timber"

    // Testing
    testImplementation "junit:junit:$versions.jUnit"
    testImplementation "androidx.test:core:$versions.testAndroidX"
    testImplementation "org.mockito:mockito-inline:$versions.mockitoInline"
    androidTestImplementation "androidx.test.ext:junit:$versions.jUnitAndroidX"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espressoCore"
}

// Generating version code. To change version code, just simply change appVersion's value from dependencies.gradle files
// Result example = 21010205 for versionName 1.2.5
private Integer generateVersionCode() {
    return versions.minSdk * 10000000 + appVersion.versionMajor * 10000 + appVersion.versionMinor * 100 + appVersion.versionPatch
}

// Generating version name. To change version name, just simply change appVersion's value from dependencies.gradle files
// Result example: 1.2.3-beta; 2.0.1-alpha
private String generateVersionName() {
    String versionName = "${appVersion.versionMajor}.${appVersion.versionMinor}.${appVersion.versionPatch}"
    if (appVersion.versionClassifier == null) {
        if(appVersion.currentPhase == appVersionPhase.phaseSnapshot) {
            appVersion.versionClassifier = "snapshot"
        } else if(appVersion.currentPhase == appVersionPhase.phaseAlpha) {
            appVersion.versionClassifier = "alpha"
        } else if(appVersion.currentPhase == appVersionPhase.phaseBeta) {
            appVersion.versionClassifier = "beta"
        } else if(appVersion.currentPhase == appVersionPhase.phaseRc) {
            appVersion.versionClassifier = "rc"
        }
    }

    if (appVersion.versionClassifier != null) {
        versionName += "-" + appVersion.versionClassifier
    }
    return versionName
}